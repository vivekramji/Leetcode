/*
 *
 *Given n, how many structurally unique BST's (binary search trees) that store values 1...n?
 *
 *For example,
 *Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

*/

public class Solution {
    public int numTrees(int n) {
     
     if( n == 0)
     {
         return 0;
     }
     
     if(n == 1)
     {
         return 1; 
     }
     
     int[] dpArray = new int[n+1];
     
     dpArray[0] = 1;
     dpArray[1] = 1;
     int sum = 0;
     
     for(int i = 2; i <= n; i++)
     {
         sum = 0;
         for(int j = 1; j <= i; j++)
         {
             sum = sum + (dpArray[j-1]*dpArray[i-j]);
         }
         
         dpArray[i] = sum;
     }
     
     return dpArray[n];
    }
    
}