/*
 *Given a roman numeral, convert it to an integer.
 *
 *Input is guaranteed to be within the range from 1 to 3999.
 */

public class Solution {
    public int romanToInt(String s) {
        
        if(s == null || s.length() == 0)
        {
            return 0;
        }
        
        Map<String, Integer> myMap = new HashMap<String, Integer>();
        
        myMap.put("I", 1);
        myMap.put("II", 2);
        myMap.put("III", 3);
        myMap.put("IV", 4);
        myMap.put("V", 5);
        myMap.put("VI", 6);
        myMap.put("VII", 7);
        myMap.put("VIII", 8);
        myMap.put("IX", 9);
        myMap.put("X", 10);
        myMap.put("L", 50);
        myMap.put("C", 100);
        myMap.put("D", 500);
        myMap.put("M", 1000);
        
        
        int answer = 0;
        
        answer = romanToIntUtility(s, myMap, 0);
        
        return answer;
        
        
    }
    
    public int romanToIntUtility( String s, Map<String, Integer> myMap, int index)
    {
        if(index == s.length())
        {
            return 0;
        }
        
        if(index + 1 < s.length())
        {
        if(s.charAt(index) == 'X' && s.charAt(index+1) == 'L')
        {
            return 40 + romanToIntUtility(s, myMap, index+2);
        }
        
        if(s.charAt(index) == 'X' && s.charAt(index+1) == 'C')
        {
            return 90 + romanToIntUtility(s, myMap, index+2);
        }
        
        if(s.charAt(index) == 'C' && s.charAt(index+1) == 'D')
        {
            return 400 + romanToIntUtility(s, myMap, index+2);
        }
        
        if(s.charAt(index) == 'C' && s.charAt(index+1) == 'M')
        {
            return 900 + romanToIntUtility(s, myMap, index+2);
        }
        }
        
        if(myMap.containsKey(s.substring(index)))
        {
            return myMap.get(s.substring(index));
        }
        
        
        return myMap.get(Character.toString(s.charAt(index))) + romanToIntUtility(s, myMap, index+1);
    }
}