/*
 *Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.
 *
 *The input string does not contain leading or trailing spaces and the words are always separated by a single space.
 *
 *For example,
 *Given s = "the sky is blue",
 *return "blue is sky the".
 *
 *Could you do it in-place without allocating extra space?
*/


public class Solution {
    
    public static void reverseWord(char[] s, int start, int end)
    {
        int i = start;
        int j = end;
      System.out.println("Reversing word : " + start + " " + end);
        while(i < j)
        {
            char temp = s[i];
            s[i] = s[j];
            s[j] = temp;
          i++;
          j--;
        }
    }
    
    
    
    public static void reverseWords(char[] s) {
     
        int i = 0;
        int j = s.length-1;



        while(i < j)
        {
            char temp = s[i];
            s[i] = s[j];
            s[j] = temp;
            i++;
            j--;
        }
        
        i = 0;
        int start = 0;
        int end = 0;
        
        
        System.out.println("First part : " + s);
        
        while( i < s.length)
        {
            if(s[i] != ' ' && i < s.length -1)
            {
              i++;
              continue;
            }
           if(s[i] == ' ')
           {
             end = i-1;
             reverseWord(s, start, end);
             start = i+1;
             end = i+1;
             
           }
          i++;
        }
        reverseWord(s, start, s.length-1);
        
        System.out.println(s);
   
    }
    
    
}   