/*
 *Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist,  *return -1.
 *
 *Examples:
 *
 *s = "leetcode"
 *return 0.
 *
 *s = "loveleetcode",
 *return 2.
 *Note: You may assume the string contain only lowercase letters.
 */


public class Solution {
    public int firstUniqChar(String s) {
        
        if(s == null || s.length() == 0)
        {
            return -1;
        }
        
        Map<Character, Integer> myMap = new HashMap<Character, Integer>();
        
        for(int i = 0; i < s.length(); i++)
        {
            if(myMap.containsKey(s.charAt(i)))
            {
                int x = myMap.get(s.charAt(i));
                x++;
                myMap.put(s.charAt(i), x);
            }
            else
            {
                myMap.put(s.charAt(i), 1);
            }
        }
        
        for(int i = 0; i < s.length(); i++)
        {
            if(myMap.get(s.charAt(i)) == 1)
            {
                return i;
            }
        }
        
        return -1;
        
    }
}