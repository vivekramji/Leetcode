/*
 *The count-and-say sequence is the sequence of integers beginning as follows:
 *1, 11, 21, 1211, 111221, ...
 *
 *1 is read off as "one 1" or 11.
 *11 is read off as "two 1s" or 21.
 *21 is read off as "one 2, then one 1" or 1211.
 *Given an integer n, generate the nth sequence.
 *
 *Note: The sequence of integers will be represented as a string.
*/

public class Solution {
    public String countAndSay(int n) {
        
        StringBuilder s = new StringBuilder();
        s.append('1');
        
        if(n == 1){
          return s.toString();
        }
        
        for(int i = 2; i <= n; i++)
        {
            String str = generateString(s);
            s.setLength(0);
            s.append(str);
        }
        return s.toString();
    }
    
    public String generateString(StringBuilder s)
    {
        int count = 0;
        char currentChar = s.charAt(0);
        StringBuilder seq = new StringBuilder();
        
        for(int i = 0; i < s.length(); i++)
        {
            if(s.charAt(i) == currentChar)
            {
                count++;
                continue;
            }
            else
            {
                seq.append(count);
                seq.append(currentChar);
                count = 1;
                currentChar = s.charAt(i); 
            }
        }
        seq.append(count);
        seq.append(currentChar);
        return seq.toString();
    }
}