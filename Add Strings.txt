*/Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.
*/

public class Solution {
    public String addStrings(String num1, String num2) {
        if(num1.length() < num2.length())
        {
            return addStrings(num2, num1);
        }
        
        StringBuilder answer = new StringBuilder();
        int carry = 0;
        
        int i = num1.length()-1;
        int j = num2.length()-1;
        
        while(i >= 0 && j >= 0)
        {
            int val1 = Integer.parseInt(Character.toString(num1.charAt(i)));
            int val2 = Integer.parseInt(Character.toString(num2.charAt(j)));
            int sum = val1 + val2 + carry;
            if(sum >= 10)
            {
                carry = 1;
                sum = sum - 10;
            }
            else
            {
                carry = 0;
            }
            answer.insert(0, sum);
            i--;
            j--;
        }
        
        if(i >= 0)
        {
            while( i >= 0)
            {
                int val1 = Integer.parseInt(Character.toString(num1.charAt(i)));
                int sum = val1 + carry;
                if(sum >= 10)
                {
                    carry = 1;
                    sum = sum - 10;
                }
                else
                {
                    carry = 0;
                }
                answer.insert(0, Integer.toString(sum));
                i--;
            }
        }
        if(carry != 0)
        {
            answer.insert(0, Integer.toString(carry));
        }
        
        return answer.toString();
    }
}