/*

	Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in
 which the depth of the two subtrees of every node never differ by more than 1.


  ****VIVEK RAMJI****

*/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 
public class Solution {
    
    boolean answer = true;
    public boolean isBalanced(TreeNode root){
        if(root == null)
        {
            return true;
        }
        
        height(root);
        return answer;
        //return false;
     
    }
    
    
    
    public int height(TreeNode root)
    {
        if(root == null)
        {
            return 0;
        }
        
        int depthLeft = height(root.left);
        int depthRight = height(root.right);
        
        if(Math.abs(depthLeft-depthRight)>1)
        {
            answer = false;
            return -1;
        }
        
        return Math.max(depthLeft, depthRight) + 1;
    }
   
}
