/*
 *Find the contiguous subarray within an array (containing at least one number) which has the largest sum.
 *
 * For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
 * the contiguous subarray [4,-1,2,1] has the largest sum = 6.
*/

public class Solution {
    public int maxSubArray(int[] nums) {
        
        
        if(nums.length == 0 || nums == null)
        {
            return 0;
        }
        int currentSum = nums[0];
        int globalSum = nums[0];
        
        int[] dpArray = new int[nums.length];
        
        for(int i = 1; i < nums.length; i++)
        {
            currentSum = Math.max(nums[i], currentSum+nums[i]);
            if(currentSum > globalSum)
            {
                 globalSum = currentSum;
            }
        }
        
        return globalSum;
        
    }
}