/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
     public int fetchHeight(TreeNode root){
        
    
        
        if(root == null)
        {
            return 0;
        }
        
        int leftHeight = 1 + fetchHeight(root.left);
        int rightHeight = 1 + fetchHeight(root.right);
        
        if(leftHeight > rightHeight)
        {
            return leftHeight;
        }
        else
            return rightHeight;
        
    }
    
    
    public List<List<Integer>> levelOrder(TreeNode root) {
         List<List<Integer>> myList = new ArrayList<List<Integer>>();
        if(root == null)
        {
            return myList;
        }
        
        
        int height = fetchHeight(root);
        
        int k = 0;
       
        
        for(k = 1; k <= height; k++)
        {
            List<Integer> innerList = new ArrayList<Integer>();
            _levelOrder(root, k, innerList);
            myList.add(innerList);
        }
        
        return myList;
        
    }
    
    
    public void _levelOrder(TreeNode root, int k, List<Integer> innerList)
    {
        if(root == null)
        {
            return; 
        }
        
        if(k == 1)
        {
            innerList.add(root.val);
            return;
        }
        
        _levelOrder(root.left, k-1, innerList);
        _levelOrder(root.right, k-1, innerList);
        
        
    }
}