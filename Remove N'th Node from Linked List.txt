/*
 *Given a linked list, remove the nth node from the end of list and return its head.
 *
 *
 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode fCrawl = head;
        ListNode sCrawl = null;
        ListNode tCrawl = null;
        
        int count = 0;
        
        if(n == 1 && head.next == null)
        {
            head = null;
            return head;
        }
        
        while(n!=0)
        {
            fCrawl = fCrawl.next;
            n--;
        }
        
        if(n == 0 && fCrawl == null)
        {
            head = head.next;
            return head;
        }
        
        sCrawl = head;
        while(fCrawl != null)
        {
            tCrawl = sCrawl;
            sCrawl = sCrawl.next;
            fCrawl = fCrawl.next;
        }
        
        tCrawl.next = sCrawl.next; 
        
        return head;
        
        
    }
}