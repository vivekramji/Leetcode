/*
 *Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
 *
 *****VIVEK RAMJI*****
 */

public class Solution {
    public int firstMissingPositive(int[] nums) {
        
        int answer = 0;
        int i = 0;
        int temp = Integer.MIN_VALUE;
        
        if(nums.length == 0)
        {
            return 1;
        }
       
       while( (i >= 0 && i < nums.length))
       {
           
           if(nums[i] <= 0 || nums[i] > nums.length)
           {
               i++;
               continue;
           }
           
           if((nums[i] - 1 != i) && (nums[nums[i] - 1] != nums[i]))
           {
               temp = nums[i];
               nums[i] = nums[temp - 1];
               nums[temp - 1] = temp;
               continue;
           }
           else
           {
               i++;
               continue;
           }
       }
       
       /*for( i = 0; i < nums.length; i++)
       {
           System.out.print(nums[i]);
       }*/
       
       for(i = 0; i < nums.length; i++)
       {
           if(nums[i] - 1 != i)
           {
               answer = i+1;
               break;
           }
          
       }
       
       if( i == nums.length)
       {
           answer = nums[i-1] + 1;
       }
       
       return answer;
      
    }
}